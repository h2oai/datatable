// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: jay.capnp

#include "jay/jay.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<65> b_cad7df991f5731d7 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    215,  49,  87,  31, 153, 223, 215, 202,
     10,   0,   0,   0,   1,   0,   2,   0,
    118, 197, 186, 191,  87, 192, 247, 155,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 130,   0,   0,   0,
     25,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    106,  97, 121,  46,  99,  97, 112, 110,
    112,  58,  70, 114,  97, 109, 101,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   0,   0,   0,   3,   0,   1,   0,
     76,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     73,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72,   0,   0,   0,   3,   0,   1,   0,
    100,   0,   0,   0,   2,   0,   1,   0,
    110, 114, 111, 119, 115,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    110,  99, 111, 108, 115,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 111, 108, 117, 109, 110, 115,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    224, 195,  51, 160, 189, 170, 175, 188,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_cad7df991f5731d7 = b_cad7df991f5731d7.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_cad7df991f5731d7[] = {
  &s_bcafaabda033c3e0,
};
static const uint16_t m_cad7df991f5731d7[] = {2, 1, 0};
static const uint16_t i_cad7df991f5731d7[] = {0, 1, 2};
const ::capnp::_::RawSchema s_cad7df991f5731d7 = {
  0xcad7df991f5731d7, b_cad7df991f5731d7.words, 65, d_cad7df991f5731d7, m_cad7df991f5731d7,
  1, 3, i_cad7df991f5731d7, nullptr, nullptr, { &s_cad7df991f5731d7, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<72> b_bcafaabda033c3e0 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    224, 195,  51, 160, 189, 170, 175, 188,
     10,   0,   0,   0,   1,   0,   4,   0,
    118, 197, 186, 191,  87, 192, 247, 155,
      4,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 138,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 231,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    106,  97, 121,  46,  99,  97, 112, 110,
    112,  58,  67, 111, 108, 117, 109, 110,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     16,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     92,   0,   0,   0,   3,   0,   1,   0,
    104,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,   0,   0,   0,   3,   0,   1,   0,
    112,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108,   0,   0,   0,   3,   0,   1,   0,
    120,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     60, 145,  84,  84,  99, 192, 152, 169,
    117,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    110,  97, 109, 101,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    110, 117, 108, 108,  99, 111, 117, 110,
    116,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 115,  99, 114, 105, 112, 116,
    105, 111, 110,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 121, 112, 101,   0,   0,   0,   0, }
};
::capnp::word const* const bp_bcafaabda033c3e0 = b_bcafaabda033c3e0.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_bcafaabda033c3e0[] = {
  &s_a998c0635454913c,
};
static const uint16_t m_bcafaabda033c3e0[] = {2, 0, 1, 3};
static const uint16_t i_bcafaabda033c3e0[] = {0, 1, 2, 3};
const ::capnp::_::RawSchema s_bcafaabda033c3e0 = {
  0xbcafaabda033c3e0, b_bcafaabda033c3e0.words, 72, d_bcafaabda033c3e0, m_bcafaabda033c3e0,
  1, 4, i_bcafaabda033c3e0, nullptr, nullptr, { &s_bcafaabda033c3e0, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<103> b_a998c0635454913c = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     60, 145,  84,  84,  99, 192, 152, 169,
     17,   0,   0,   0,   1,   0,   4,   0,
    224, 195,  51, 160, 189, 170, 175, 188,
      4,   0,   7,   0,   1,   0,  10,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 178,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  55,   2,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    106,  97, 121,  46,  99,  97, 112, 110,
    112,  58,  67, 111, 108, 117, 109, 110,
     46, 116, 121, 112, 101,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   4,   0,
      0,   0, 255, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   1,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   1,   0,   0,   3,   0,   1,   0,
     16,   1,   0,   0,   2,   0,   1,   0,
      1,   0, 254, 255,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     18, 141,  52, 228,   7, 140, 104, 149,
     13,   1,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0, 253, 255,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    175,  78, 205, 232, 221,  27,  39, 165,
    245,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      3,   0, 252, 255,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     49, 134, 143, 239, 233,  95,  97, 203,
    221,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0, 251, 255,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     29,  85,  69, 169,  13, 251, 185, 209,
    197,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0, 250, 255,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     35, 142, 110, 139, 215, 175, 226, 217,
    173,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      6,   0, 249, 255,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    100,  99, 100, 152, 168, 166,  35, 201,
    149,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      7,   0, 248, 255,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    227, 211,  45, 226, 160, 152,  63, 168,
    125,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0, 247, 255,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    129,  44, 190,  13, 182,  34, 113, 226,
    101,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0, 246, 255,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    194,  74,  63, 148,   2, 162,  28, 212,
     77,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 117,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     98, 111, 111, 108,  56,   0,   0,   0,
    105, 110, 116,  56,   0,   0,   0,   0,
    105, 110, 116,  49,  54,   0,   0,   0,
    105, 110, 116,  51,  50,   0,   0,   0,
    105, 110, 116,  54,  52,   0,   0,   0,
    102, 108, 111,  97, 116,  51,  50,   0,
    102, 108, 111,  97, 116,  54,  52,   0,
    115, 116, 114,  51,  50,   0,   0,   0,
    115, 116, 114,  54,  52,   0,   0,   0, }
};
::capnp::word const* const bp_a998c0635454913c = b_a998c0635454913c.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_a998c0635454913c[] = {
  &s_95688c07e4348d12,
  &s_a5271bdde8cd4eaf,
  &s_a83f98a0e22dd3e3,
  &s_bcafaabda033c3e0,
  &s_c923a6a898646364,
  &s_cb615fe9ef8f8631,
  &s_d1b9fb0da945551d,
  &s_d41ca202943f4ac2,
  &s_d9e2afd78b6e8e23,
  &s_e27122b60dbe2c81,
};
static const uint16_t m_a998c0635454913c[] = {1, 6, 7, 3, 4, 5, 2, 0, 8, 9};
static const uint16_t i_a998c0635454913c[] = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9};
const ::capnp::_::RawSchema s_a998c0635454913c = {
  0xa998c0635454913c, b_a998c0635454913c.words, 103, d_a998c0635454913c, m_a998c0635454913c,
  10, 10, i_a998c0635454913c, nullptr, nullptr, { &s_a998c0635454913c, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<62> b_95688c07e4348d12 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     18, 141,  52, 228,   7, 140, 104, 149,
     22,   0,   0,   0,   1,   0,   4,   0,
     60, 145,  84,  84,  99, 192, 152, 169,
      4,   0,   7,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 226,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    106,  97, 121,  46,  99,  97, 112, 110,
    112,  58,  67, 111, 108, 117, 109, 110,
     46, 116, 121, 112, 101,  46,  98, 111,
    111, 108,  56,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   0,   0,   0,   3,   0,   1,   0,
     76,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,  10,   0,   0,   0,
      0,   0,   1,   0,   5,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     73,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,  11,   0,   0,   0,
      0,   0,   1,   0,   6,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72,   0,   0,   0,   3,   0,   1,   0,
     84,   0,   0,   0,   2,   0,   1,   0,
    100,  97, 116,  97,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    197, 167,  68, 213, 147,  74, 187, 225,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 105, 110,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0, 128,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 120,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0, 128,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_95688c07e4348d12 = b_95688c07e4348d12.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_95688c07e4348d12[] = {
  &s_a998c0635454913c,
  &s_e1bb4a93d544a7c5,
};
static const uint16_t m_95688c07e4348d12[] = {0, 2, 1};
static const uint16_t i_95688c07e4348d12[] = {0, 1, 2};
const ::capnp::_::RawSchema s_95688c07e4348d12 = {
  0x95688c07e4348d12, b_95688c07e4348d12.words, 62, d_95688c07e4348d12, m_95688c07e4348d12,
  2, 3, i_95688c07e4348d12, nullptr, nullptr, { &s_95688c07e4348d12, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<62> b_a5271bdde8cd4eaf = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    175,  78, 205, 232, 221,  27,  39, 165,
     22,   0,   0,   0,   1,   0,   4,   0,
     60, 145,  84,  84,  99, 192, 152, 169,
      4,   0,   7,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 218,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    106,  97, 121,  46,  99,  97, 112, 110,
    112,  58,  67, 111, 108, 117, 109, 110,
     46, 116, 121, 112, 101,  46, 105, 110,
    116,  56,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   0,   0,   0,   3,   0,   1,   0,
     76,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,  10,   0,   0,   0,
      0,   0,   1,   0,   8,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     73,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,  11,   0,   0,   0,
      0,   0,   1,   0,   9,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72,   0,   0,   0,   3,   0,   1,   0,
     84,   0,   0,   0,   2,   0,   1,   0,
    100,  97, 116,  97,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    197, 167,  68, 213, 147,  74, 187, 225,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 105, 110,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0, 128,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 120,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0, 128,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_a5271bdde8cd4eaf = b_a5271bdde8cd4eaf.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_a5271bdde8cd4eaf[] = {
  &s_a998c0635454913c,
  &s_e1bb4a93d544a7c5,
};
static const uint16_t m_a5271bdde8cd4eaf[] = {0, 2, 1};
static const uint16_t i_a5271bdde8cd4eaf[] = {0, 1, 2};
const ::capnp::_::RawSchema s_a5271bdde8cd4eaf = {
  0xa5271bdde8cd4eaf, b_a5271bdde8cd4eaf.words, 62, d_a5271bdde8cd4eaf, m_a5271bdde8cd4eaf,
  2, 3, i_a5271bdde8cd4eaf, nullptr, nullptr, { &s_a5271bdde8cd4eaf, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<62> b_cb615fe9ef8f8631 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     49, 134, 143, 239, 233,  95,  97, 203,
     22,   0,   0,   0,   1,   0,   4,   0,
     60, 145,  84,  84,  99, 192, 152, 169,
      4,   0,   7,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 226,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    106,  97, 121,  46,  99,  97, 112, 110,
    112,  58,  67, 111, 108, 117, 109, 110,
     46, 116, 121, 112, 101,  46, 105, 110,
    116,  49,  54,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,  10,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   0,   0,   0,   3,   0,   1,   0,
     76,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   5,   0,   0,   0,
      0,   0,   1,   0,  11,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     73,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   6,   0,   0,   0,
      0,   0,   1,   0,  12,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72,   0,   0,   0,   3,   0,   1,   0,
     84,   0,   0,   0,   2,   0,   1,   0,
    100,  97, 116,  97,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    197, 167,  68, 213, 147,  74, 187, 225,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 105, 110,   0,   0,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      3,   0,   0, 128,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 120,   0,   0,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      3,   0,   0, 128,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_cb615fe9ef8f8631 = b_cb615fe9ef8f8631.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_cb615fe9ef8f8631[] = {
  &s_a998c0635454913c,
  &s_e1bb4a93d544a7c5,
};
static const uint16_t m_cb615fe9ef8f8631[] = {0, 2, 1};
static const uint16_t i_cb615fe9ef8f8631[] = {0, 1, 2};
const ::capnp::_::RawSchema s_cb615fe9ef8f8631 = {
  0xcb615fe9ef8f8631, b_cb615fe9ef8f8631.words, 62, d_cb615fe9ef8f8631, m_cb615fe9ef8f8631,
  2, 3, i_cb615fe9ef8f8631, nullptr, nullptr, { &s_cb615fe9ef8f8631, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<62> b_d1b9fb0da945551d = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     29,  85,  69, 169,  13, 251, 185, 209,
     22,   0,   0,   0,   1,   0,   4,   0,
     60, 145,  84,  84,  99, 192, 152, 169,
      4,   0,   7,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 226,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    106,  97, 121,  46,  99,  97, 112, 110,
    112,  58,  67, 111, 108, 117, 109, 110,
     46, 116, 121, 112, 101,  46, 105, 110,
    116,  51,  50,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,  13,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   0,   0,   0,   3,   0,   1,   0,
     76,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   3,   0,   0,   0,
      0,   0,   1,   0,  14,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     73,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   4,   0,   0,   0,
      0,   0,   1,   0,  15,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72,   0,   0,   0,   3,   0,   1,   0,
     84,   0,   0,   0,   2,   0,   1,   0,
    100,  97, 116,  97,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    197, 167,  68, 213, 147,  74, 187, 225,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 105, 110,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0, 128,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 120,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0, 128,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_d1b9fb0da945551d = b_d1b9fb0da945551d.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_d1b9fb0da945551d[] = {
  &s_a998c0635454913c,
  &s_e1bb4a93d544a7c5,
};
static const uint16_t m_d1b9fb0da945551d[] = {0, 2, 1};
static const uint16_t i_d1b9fb0da945551d[] = {0, 1, 2};
const ::capnp::_::RawSchema s_d1b9fb0da945551d = {
  0xd1b9fb0da945551d, b_d1b9fb0da945551d.words, 62, d_d1b9fb0da945551d, m_d1b9fb0da945551d,
  2, 3, i_d1b9fb0da945551d, nullptr, nullptr, { &s_d1b9fb0da945551d, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<62> b_d9e2afd78b6e8e23 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     35, 142, 110, 139, 215, 175, 226, 217,
     22,   0,   0,   0,   1,   0,   4,   0,
     60, 145,  84,  84,  99, 192, 152, 169,
      4,   0,   7,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 226,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    106,  97, 121,  46,  99,  97, 112, 110,
    112,  58,  67, 111, 108, 117, 109, 110,
     46, 116, 121, 112, 101,  46, 105, 110,
    116,  54,  52,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,  16,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   0,   0,   0,   3,   0,   1,   0,
     76,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,  17,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     73,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   3,   0,   0,   0,
      0,   0,   1,   0,  18,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72,   0,   0,   0,   3,   0,   1,   0,
     84,   0,   0,   0,   2,   0,   1,   0,
    100,  97, 116,  97,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    197, 167,  68, 213, 147,  74, 187, 225,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 105, 110,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0, 128,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 120,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0, 128,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_d9e2afd78b6e8e23 = b_d9e2afd78b6e8e23.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_d9e2afd78b6e8e23[] = {
  &s_a998c0635454913c,
  &s_e1bb4a93d544a7c5,
};
static const uint16_t m_d9e2afd78b6e8e23[] = {0, 2, 1};
static const uint16_t i_d9e2afd78b6e8e23[] = {0, 1, 2};
const ::capnp::_::RawSchema s_d9e2afd78b6e8e23 = {
  0xd9e2afd78b6e8e23, b_d9e2afd78b6e8e23.words, 62, d_d9e2afd78b6e8e23, m_d9e2afd78b6e8e23,
  2, 3, i_d9e2afd78b6e8e23, nullptr, nullptr, { &s_d9e2afd78b6e8e23, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<62> b_c923a6a898646364 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    100,  99, 100, 152, 168, 166,  35, 201,
     22,   0,   0,   0,   1,   0,   4,   0,
     60, 145,  84,  84,  99, 192, 152, 169,
      4,   0,   7,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 242,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    106,  97, 121,  46,  99,  97, 112, 110,
    112,  58,  67, 111, 108, 117, 109, 110,
     46, 116, 121, 112, 101,  46, 102, 108,
    111,  97, 116,  51,  50,   0,   0,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,  19,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   0,   0,   0,   3,   0,   1,   0,
     76,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   3,   0,   0,   0,
      0,   0,   1,   0,  20,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     73,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   4,   0,   0,   0,
      0,   0,   1,   0,  21,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72,   0,   0,   0,   3,   0,   1,   0,
     84,   0,   0,   0,   2,   0,   1,   0,
    100,  97, 116,  97,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    197, 167,  68, 213, 147,  74, 187, 225,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 105, 110,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0, 192, 127,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 120,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0, 192, 127,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_c923a6a898646364 = b_c923a6a898646364.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_c923a6a898646364[] = {
  &s_a998c0635454913c,
  &s_e1bb4a93d544a7c5,
};
static const uint16_t m_c923a6a898646364[] = {0, 2, 1};
static const uint16_t i_c923a6a898646364[] = {0, 1, 2};
const ::capnp::_::RawSchema s_c923a6a898646364 = {
  0xc923a6a898646364, b_c923a6a898646364.words, 62, d_c923a6a898646364, m_c923a6a898646364,
  2, 3, i_c923a6a898646364, nullptr, nullptr, { &s_c923a6a898646364, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<62> b_a83f98a0e22dd3e3 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    227, 211,  45, 226, 160, 152,  63, 168,
     22,   0,   0,   0,   1,   0,   4,   0,
     60, 145,  84,  84,  99, 192, 152, 169,
      4,   0,   7,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 242,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    106,  97, 121,  46,  99,  97, 112, 110,
    112,  58,  67, 111, 108, 117, 109, 110,
     46, 116, 121, 112, 101,  46, 102, 108,
    111,  97, 116,  54,  52,   0,   0,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,  22,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   0,   0,   0,   3,   0,   1,   0,
     76,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,  23,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     73,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   3,   0,   0,   0,
      0,   0,   1,   0,  24,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72,   0,   0,   0,   3,   0,   1,   0,
     84,   0,   0,   0,   2,   0,   1,   0,
    100,  97, 116,  97,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    197, 167,  68, 213, 147,  74, 187, 225,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 105, 110,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0, 248, 127,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 120,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0, 248, 127,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_a83f98a0e22dd3e3 = b_a83f98a0e22dd3e3.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_a83f98a0e22dd3e3[] = {
  &s_a998c0635454913c,
  &s_e1bb4a93d544a7c5,
};
static const uint16_t m_a83f98a0e22dd3e3[] = {0, 2, 1};
static const uint16_t i_a83f98a0e22dd3e3[] = {0, 1, 2};
const ::capnp::_::RawSchema s_a83f98a0e22dd3e3 = {
  0xa83f98a0e22dd3e3, b_a83f98a0e22dd3e3.words, 62, d_a83f98a0e22dd3e3, m_a83f98a0e22dd3e3,
  2, 3, i_a83f98a0e22dd3e3, nullptr, nullptr, { &s_a83f98a0e22dd3e3, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<47> b_e27122b60dbe2c81 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    129,  44, 190,  13, 182,  34, 113, 226,
     22,   0,   0,   0,   1,   0,   4,   0,
     60, 145,  84,  84,  99, 192, 152, 169,
      4,   0,   7,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 226,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    106,  97, 121,  46,  99,  97, 112, 110,
    112,  58,  67, 111, 108, 117, 109, 110,
     46, 116, 121, 112, 101,  46, 115, 116,
    114,  51,  50,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,  25,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   3,   0,   0,   0,
      0,   0,   1,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    111, 102, 102, 115, 101, 116, 115,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    197, 167,  68, 213, 147,  74, 187, 225,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 116, 114, 100,  97, 116,  97,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    197, 167,  68, 213, 147,  74, 187, 225,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_e27122b60dbe2c81 = b_e27122b60dbe2c81.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_e27122b60dbe2c81[] = {
  &s_a998c0635454913c,
  &s_e1bb4a93d544a7c5,
};
static const uint16_t m_e27122b60dbe2c81[] = {0, 1};
static const uint16_t i_e27122b60dbe2c81[] = {0, 1};
const ::capnp::_::RawSchema s_e27122b60dbe2c81 = {
  0xe27122b60dbe2c81, b_e27122b60dbe2c81.words, 47, d_e27122b60dbe2c81, m_e27122b60dbe2c81,
  2, 2, i_e27122b60dbe2c81, nullptr, nullptr, { &s_e27122b60dbe2c81, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<47> b_d41ca202943f4ac2 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    194,  74,  63, 148,   2, 162,  28, 212,
     22,   0,   0,   0,   1,   0,   4,   0,
     60, 145,  84,  84,  99, 192, 152, 169,
      4,   0,   7,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 226,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    106,  97, 121,  46,  99,  97, 112, 110,
    112,  58,  67, 111, 108, 117, 109, 110,
     46, 116, 121, 112, 101,  46, 115, 116,
    114,  54,  52,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,  27,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   3,   0,   0,   0,
      0,   0,   1,   0,  28,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    111, 102, 102, 115, 101, 116, 115,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    197, 167,  68, 213, 147,  74, 187, 225,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 116, 114, 100,  97, 116,  97,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    197, 167,  68, 213, 147,  74, 187, 225,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_d41ca202943f4ac2 = b_d41ca202943f4ac2.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_d41ca202943f4ac2[] = {
  &s_a998c0635454913c,
  &s_e1bb4a93d544a7c5,
};
static const uint16_t m_d41ca202943f4ac2[] = {0, 1};
static const uint16_t i_d41ca202943f4ac2[] = {0, 1};
const ::capnp::_::RawSchema s_d41ca202943f4ac2 = {
  0xd41ca202943f4ac2, b_d41ca202943f4ac2.words, 47, d_d41ca202943f4ac2, m_d41ca202943f4ac2,
  2, 2, i_d41ca202943f4ac2, nullptr, nullptr, { &s_d41ca202943f4ac2, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<47> b_e1bb4a93d544a7c5 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    197, 167,  68, 213, 147,  74, 187, 225,
     10,   0,   0,   0,   1,   0,   2,   0,
    118, 197, 186, 191,  87, 192, 247, 155,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 138,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    106,  97, 121,  46,  99,  97, 112, 110,
    112,  58,  66, 117, 102, 102, 101, 114,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    111, 102, 102, 115, 101, 116,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108, 101, 110, 103, 116, 104,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_e1bb4a93d544a7c5 = b_e1bb4a93d544a7c5.words;
#if !CAPNP_LITE
static const uint16_t m_e1bb4a93d544a7c5[] = {1, 0};
static const uint16_t i_e1bb4a93d544a7c5[] = {0, 1};
const ::capnp::_::RawSchema s_e1bb4a93d544a7c5 = {
  0xe1bb4a93d544a7c5, b_e1bb4a93d544a7c5.words, 47, nullptr, m_e1bb4a93d544a7c5,
  0, 2, i_e1bb4a93d544a7c5, nullptr, nullptr, { &s_e1bb4a93d544a7c5, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace jay {

// Frame
constexpr uint16_t Frame::_capnpPrivate::dataWordSize;
constexpr uint16_t Frame::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Frame::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Frame::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Column
constexpr uint16_t Column::_capnpPrivate::dataWordSize;
constexpr uint16_t Column::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Column::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Column::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Column::Type
constexpr uint16_t Column::Type::_capnpPrivate::dataWordSize;
constexpr uint16_t Column::Type::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Column::Type::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Column::Type::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Column::Type::Bool8
constexpr uint16_t Column::Type::Bool8::_capnpPrivate::dataWordSize;
constexpr uint16_t Column::Type::Bool8::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Column::Type::Bool8::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Column::Type::Bool8::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Column::Type::Int8
constexpr uint16_t Column::Type::Int8::_capnpPrivate::dataWordSize;
constexpr uint16_t Column::Type::Int8::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Column::Type::Int8::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Column::Type::Int8::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Column::Type::Int16
constexpr uint16_t Column::Type::Int16::_capnpPrivate::dataWordSize;
constexpr uint16_t Column::Type::Int16::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Column::Type::Int16::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Column::Type::Int16::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Column::Type::Int32
constexpr uint16_t Column::Type::Int32::_capnpPrivate::dataWordSize;
constexpr uint16_t Column::Type::Int32::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Column::Type::Int32::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Column::Type::Int32::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Column::Type::Int64
constexpr uint16_t Column::Type::Int64::_capnpPrivate::dataWordSize;
constexpr uint16_t Column::Type::Int64::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Column::Type::Int64::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Column::Type::Int64::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Column::Type::Float32
constexpr uint16_t Column::Type::Float32::_capnpPrivate::dataWordSize;
constexpr uint16_t Column::Type::Float32::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Column::Type::Float32::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Column::Type::Float32::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Column::Type::Float64
constexpr uint16_t Column::Type::Float64::_capnpPrivate::dataWordSize;
constexpr uint16_t Column::Type::Float64::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Column::Type::Float64::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Column::Type::Float64::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Column::Type::Str32
constexpr uint16_t Column::Type::Str32::_capnpPrivate::dataWordSize;
constexpr uint16_t Column::Type::Str32::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Column::Type::Str32::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Column::Type::Str32::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Column::Type::Str64
constexpr uint16_t Column::Type::Str64::_capnpPrivate::dataWordSize;
constexpr uint16_t Column::Type::Str64::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Column::Type::Str64::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Column::Type::Str64::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Buffer
constexpr uint16_t Buffer::_capnpPrivate::dataWordSize;
constexpr uint16_t Buffer::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Buffer::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Buffer::_capnpPrivate::schema;
#endif  // !CAPNP_LITE


}  // namespace

