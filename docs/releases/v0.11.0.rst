

.. changelog::


  Frame
  -----
  .. ref-context:: datatable.Frame

  -[new] Property :attr:`Frame.source` will contain the name of the file
    where the frame was loaded from. If the frame was modified after loading,
    or if it was created dynamically to begin with, this property will
    return ``None``.

  -[new] The expression ``len(DT)`` now works, and returns the number of
    columns in the Frame. This allows the Frame to be used in contexts where
    an iterable might be expected.

  -[enh] String columns now support comparison operators ``<``, ``>``, ``<=``
    and ``>=``. [#2274]

  -[enh] Method :meth:`Frame.colindex()` now accepts a column selector
    f-expression as an argument.

  -[enh] When creating a Frame from a python list, it is now possible to
    explicitly specify the stype of the resulting column by "dividing" the
    list by the type you need::

        dt.Frame(A=[1, 5, 10] / dt.int64,
                 B=[0, 0, 0] / dt.float64)

  -[enh] Added new argument ``bom=False`` to the :meth:`Frame.to_csv()` method.
    If set to ``True``, it will add the Byte-Order Mark (BOM) to the output
    CSV file. [#2379]

  -[api] Method :meth:`.cbind()` now throws an :exc:`InvalidOperationError`
    instead of a ``ValueError`` if the argument frames have incompatible
    shapes.

  -[api] Method :meth:`.colindex()` now throws an :exc:`KeyError` when given
    a column that doesn't exist in the frame, or an :exc:`IndexError` if
    given a numeric column index outside of the allowed range. Previously it
    was throwing a ``ValueError`` in both cases.

  -[api] When creating a Frame from a list containing mixed integers / floats
    and strings, the resulting Frame will now have stype ``str32``. Previously
    an ``obj64`` column was created instead. The new behavior is more
    consistent with fread's behavior when reading CSV files.

  -[bug] Deleting a key from the Frame (``del DT.key``) no longer causes a
    seg.fault. [#2357]

  -[bug] Casting a 0-row ``str32`` column into ``str64`` stype no longer goes
    into an infinite loop. [#2369]

  -[bug] Fixed creation of a ``str64`` column from a python list of strings
    when the total size of all strings is greater than 2GB. [#2368]

  -[bug] Rbinding several ``str32`` columns such that their combined string
    buffers have size over 2GB now properly creates a ``str64`` column as a
    result. [#2367]

  -[bug] Fixed crash when writing to CSV a frame with many boolean columns
    when the option ``quoting="all"`` is used. [#2382]


  Fread
  -----

  -[fix] When reading Excel files, the cells with datetime or boolean types
    are now handled correctly, in particular a datetime value is converted
    into its string representation. [#1701]

  -[new] Added new function :func:`iread()`, which is similar to
    :func:`fread()`, but suitable for reading multiple sources at once. The
    function will return an iterator of Frames.

    Use this function to read multiple files using a glob, or give it a list
    of files, or an archive containing multiple files inside, or an Excel
    file with multiple sheets, etc.

    The function :func:`iread()` has parameter ``errors=`` which controls
    what shouold happen when some of the sources cannot be read. Possible
    values are: ``"warn"``, ``"raise"``, ``"ignore"`` and ``"store"``. The
    latter will catch the exceptions that may occur when reading each
    input, and return those exception objects within the iterator. [#2008]

  -[new] It is now possible to read multi-file ``.tar.gz`` files using
    :func:`iread()`. [#2392]

  -[enh] Added parameter ``multiple_sources`` which controls fread's
    behavior when multiple input sources are detected (for example, if you
    pass a name of an archive, and the archive contains multiple files).
    Possible values are: ``"warn"`` (default), ``"error"``, and ``"ignore"``.

  -[api] Function :func:`fread()` now always returns a single Frame object;
    previously it could return a dict of Frames if multiple sources were
    detected. Use :func:`iread()` if you need to read multi-source input.


  General
  -------
  .. ref-context:: datatable

  -[new] Added exception :exc:`InvalidOperationError`, which can be used to
    signal when an operation is requested that would be illegal for the given
    combination of parameters.

  -[enh] Datatable no longer has modules ``blessed`` and ``typesentry`` as
    dependencies. [#1677] [#1535]

  -[enh] Added 2 new fields into the ``dt.build_info`` struct: ``.git_date``
    is the UTC timestamp of the git revision from which that version of
    datatable was built, and ``.git_diff`` which will be non-empty for builds
    from code that was modified compared to the git revision they are based on.

  -[fix] Internal function :func:`frame_column_data_r` now works properly with
    virtual columns. [#2269]

  -[fix] Avoid rare deadlock when creating a frame from pandas DataFrame in
    a forked process, in the datatable compiled with gcc version before 7.0.
    [#2272]

  -[fix] Fix rare crash in the interrupt signal handler. [#2282]

  -[fix] Fixed possible crash in :func:`rbind()` and :func:`union()` when
    they were called with a string argument, or with an object that caused
    infinite recursion. [#2386]

  -[api] All exceptions thrown by datatable are now declared in the
    ``datatable.exceptions`` module. These exceptions are now organized to
    derive from the common base class ``DtException``.

    The exception messages when stringified no longer contain backticks. The
    backticks are still emitted internally to help display the error in a
    color-supporting terminal, but when the exception is converted into a
    string via `str()` or `repr()`, these backticks will now be stripped.
    This change ensures that the exception message remains the same regardless
    of how it is rendered.


  FTRL model
  ----------
  .. ref-context:: datatable.models.Ftrl

  -[enh] :attr:`.nepochs`, the number of epochs to train the model, can now
    be a float rather than an integer.


  .. contributors::

    39  @st-pasha
    20  @oleksiyskononenko
    1   @mmalohlava
    1   @bboe                <Bryce Boe>
    --
    11  @st-pasha
    4   @oleksiyskononenko
