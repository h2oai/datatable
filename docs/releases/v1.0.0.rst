
.. changelog::
    :version: 1.0.0
    :released: 2021-07-01
    :wheels: https://files.pythonhosted.org/packages/73/55/8f1e0ec35d0697328023d477af346dc29043dd662aa2ed98f1e4e6beb9aa/datatable-1.0.0-cp36-cp36m-macosx_10_9_x86_64.whl
             https://files.pythonhosted.org/packages/7f/ca/8fe90170c84c9f300ef69e244e6416c7ca4cbf478a262beedace8d513cd3/datatable-1.0.0-cp36-cp36m-manylinux2014_ppc64le.whl
             https://files.pythonhosted.org/packages/a4/f3/a18a4c49a24493d848920a8ab5b50e02399b4cc295878f1489137abc3719/datatable-1.0.0-cp36-cp36m-manylinux_2_12_x86_64.whl
             https://files.pythonhosted.org/packages/a3/77/827140cb6307f685505b6d26c0882ac0ae77059c39284f7fd97d8b732f0a/datatable-1.0.0-cp36-cp36m-win_amd64.whl
             https://files.pythonhosted.org/packages/28/45/fb109006ae9395292a6b6284f57034986a6fc1c708d13c7c6bc773fe8381/datatable-1.0.0-cp37-cp37m-macosx_10_9_x86_64.whl
             https://files.pythonhosted.org/packages/52/ff/5edb8cfb41c19991e9a7f15cfa973d77cbe2850844c40120abef9d2bd518/datatable-1.0.0-cp37-cp37m-manylinux2014_ppc64le.whl
             https://files.pythonhosted.org/packages/42/77/96d30c18ebacc20b1a92676f674522a4daee12e14715ab90b52de0cab546/datatable-1.0.0-cp37-cp37m-manylinux_2_12_x86_64.whl
             https://files.pythonhosted.org/packages/57/8c/db8c2f41364e54aa64ca7b60bf14fc68c796867b6a08b147c95f87b34393/datatable-1.0.0-cp37-cp37m-win_amd64.whl
             https://files.pythonhosted.org/packages/d9/70/1c870220a7eecfb94582e2267fc74acba6b3a1977012bd15bd18b907fd2a/datatable-1.0.0-cp38-cp38-macosx_10_9_x86_64.whl
             https://files.pythonhosted.org/packages/9e/70/66b349c16850521d8fc7276d72234f1959d4613cc1bd442e6d61fac186b0/datatable-1.0.0-cp38-cp38-manylinux2014_ppc64le.whl
             https://files.pythonhosted.org/packages/e5/57/955aa808ff75aed5fa1a4a542f95ff94ea0ee5bcc3f65c2efb819023f1c6/datatable-1.0.0-cp38-cp38-manylinux_2_12_x86_64.whl
             https://files.pythonhosted.org/packages/d6/3a/0a43289d428199640ae515b6dd2ffa4fe4f785ed2dbddfd2798f8bd23870/datatable-1.0.0-cp38-cp38-win_amd64.whl
             https://files.pythonhosted.org/packages/f1/f2/8c99c7c342a1d1fbbdd7b65846e823e69d3ba7349ba16854632de96326cb/datatable-1.0.0-cp39-cp39-macosx_10_9_x86_64.whl
             https://files.pythonhosted.org/packages/58/ac/111c5a18bdbafbc4de804abc8ceca15682a9750016d9a25d331168545d96/datatable-1.0.0-cp39-cp39-manylinux2014_ppc64le.whl
             https://files.pythonhosted.org/packages/f1/33/4933dc7e7d9f29ad502ca6f17bd2f66bfa30d5af71b90812044c56291de7/datatable-1.0.0-cp39-cp39-manylinux_2_12_x86_64.whl
             https://files.pythonhosted.org/packages/83/c0/796931096c7a29f0449410d20d62cf2868302e88010434fe03daa0f47457/datatable-1.0.0-cp39-cp39-win_amd64.whl
             https://files.pythonhosted.org/packages/04/0c/bff6497afcf95a3257c4168b95c8acab91c8ef234fe473eaf6689d582da1/datatable-1.0.0.tar.gz

    Frame
    -----
    .. current-class:: datatable.Frame

    -[new] Property :attr:`.types` returns the list of :class:`dt.Type`
      objects for each column of the frame. These types are a generalization
      of previous stypes, and will eventually replace them.

      Property :attr:`.type` returns the common :class:`dt.Type` for all
      columns of the frame (provided that it exists).

    -[new] New column type :attr:`dt.Type.date32` added, which can store a
      calendar date [#2858]::

          >>> import datetime
          >>> DT = dt.Frame([datetime.date(2021, 2, 17)])

    -[new] New column type :attr:`dt.Type.time64` added, which cat store
      timestamps within a certain time zone (in a single column all times
      must be in the same time zone) [#2911]::

          >>> import datetime
          >>> DT = dt.Frame([datetime.datetime(2021, 3, 17, 9, 0, 0)])

    -[new] A Frame can now be constructed from an Arrow
      table::

          >>> DT = dt.Frame(arrow_table)

      This process uses data Arrow C Data interface, and therefore does
      not entail data copying.

    -[new] A Frame can now be converted into an Arrow table, using the
      :meth:`.to_arrow()` method::

          >>> pa_table = DT.to_arrow()

    -[new] :attr:`.meta` property now provides access to frame's meta
      information, if any, as set by datatable functions/methods or
      by the user.

    -[new] Class :class:`dt.FExpr` now has method :meth:`.sum() <dt.FExpr.sum>`,
      which behaves exactly as the base level function :func:`dt.sum()`.

    -[new] Class :class:`dt.FExpr` now has methods :meth:`.max() <dt.FExpr.max>`,
      :meth:`.min() <dt.FExpr.min>`, :meth:`.mean() <dt.FExpr.mean>`,
      and :meth:`.median() <dt.FExpr.median>`, which behave exactly as the
      equivalent base level functions :func:`dt.max()`, :func:`dt.min()`,
      :func:`dt.mean()`,  and :func:`dt.median()` respectively.

    -[new] Class :class:`dt.FExpr` now has methods for all the
      row functions (:func:`dt.rowsum()`, :func:`dt.rowall()`, etc).

    -[new] Class :class:`dt.FExpr` now has methods :meth:`.sd() <dt.FExpr.sd>`,
      :meth:`.count() <dt.FExpr.count>`, :meth:`.first() <dt.FExpr.first>`,
      :meth:`.last() <dt.FExpr.last>`, and :meth:`.shift() <dt.FExpr.shift>`,
      which behave exactly as the equivalent base level functions :func:`dt.sd()`,
      :func:`dt.count()`, :func:`dt.first()`, :func:`dt.last()`,
      and :func:`dt.shift()` respectively.

    -[new] Added stats functions :meth:`.skew()` and :meth:`.kurt()`. [#1084]

    -[enh] The row selector ``i`` in the delete operation ``del DT[i, :]``
      can now be an unsorted list. The list can also contain duplicate
      values.

    -[enh] When a keyed Frame is converted into a pandas DataFrame, the
      key columns will now become the DataFrame's index, not regulat
      columns. [#2883]

    -[enh] When a Frame is shown in a python console, it will now display
      the stype of each column, as a second line under the column names.
      [#2810]

    -[enh] Parameter ``types=`` in Frame's constructor can now accept arguments
      of class :class:`dt.Type`, and also pyarrow's types. [#2986]

    -[fix] A Frame can now be created properly from a list of numpy bool
      objects. [#2762]

    -[fix] Frames with 1000000+ columns will now be correctly stored in Jay.
      [#2876]

    -[fix] Passing an invalid value to the ``column=`` argument of the
      :meth:`.to_numpy()` method will no longer result in a crash.

    -[fix] Frame terminal display no longer overflows terminal's width if
      it contains strings with special characters. [#2844]

    -[fix] Sorting in reverse order now works correctly in the presence
      of a groupby. [#2838]

    -[fix] Creating a Frame from a list of ``np.str_`` objects now works
      correctly. [#3026]

    -[api] Converting a frame with incompatible types into a numpy array will
      now raise an error (instead of auto-promoting to object type). However,
      if the user explicitly requests promotion into the object type then
      there won't be any error.

    -[api] Rbinding frames with columns of incompatible types will now raise
      an error instead of auto-promoting to string type. [#2790]

    -[api] When a frame is converted into a numpy array of floatinng type,
      then we will produce a regular ``np.ndarray`` instead of a masked array.

    -[api] Properties :attr:`.stypes` and :attr:`.ltypes` are now considered
      deprecated and will be removed in a future version. Currently they
      continue to work as before, however.

    -[api] When a frame is created from a list of python objects of disparate
      types, we will no longer create a column of type ``object`` -- instead,
      a :exc:`dt.exceptions.TypeError` will  be thrown. An ``object`` column
      can still be created by an explicit request via the ``stype=``
      parameter in the constructor.

    -[api] Parameter ``stypes=`` in Frame constructor was renamed into
      ``types=``, and similarly ``stype=`` into ``type=``. The old parameter
      names are still recognized, but no longer documented.

    -[api] Internal functions ``dt.internal.compiler_version()`` and
      ``dt.internal.in_debug_mode()`` removed and replaced with flags
      ``.compiler`` and ``.build_mode`` in :data:`dt.build_info`. Function
      ``dt.interenal.regex_supported()`` removed entirely -- datatable will
      now always have support for regular expressions. [#2636]


    FExpr
    -----
    .. current-module:: datatable

    -[new] Function :func:`ifelse()` can now accept more than 3 arguments,
      implementing a chained-if functionality. This is equivalent to
      ``CASE WHEN`` in SQL. [#2656]

    -[new] New function :func:`as_type()` that allows casting columns into
      a different stype. This function is an alternative to the already
      existing functionality of using the stype itself as a cast function.

    -[new] Function :func:`dt.time.ymd()` can create ``date32`` columns out of
      individual year/month/day parts.

    -[new] Functions :func:`dt.time.year()`, :func:`dt.time.month()` and
      :func:`dt.time.day()` for retrieving individual components of a date.

    -[new] New function :func:`dt.time.day_of_week()` for computing the day
      of week (Monday to Sunday) for the given date column.

    -[new] New function :func:`dt.str.slice()` for applying a slice to a
      string column. [#1667]

    -[enh] Function :func:`sort()` can now accept argument ``na_positon=``.
      It can take three values: ``"first"`` (default), ``"last"`` and
      ``"remove"``. The values describe the position assigned to NAs after
      sorting. [#793]

    -[enh] Function :func:`cut()` can now accept argument ``bins=``, that
     is a list or a tuple of frames containing edges of the binning
     intervals. [#2819]

    -[fix] When a whole column is updated within a ``DT[i, j, by()]`` call,
      the stype/ltype of that column us now allowed to change. [#2685]

    -[fix] Fix a crash that occurred when using :func:`median()` on virtual
      columns of type ArrayView64. [#2802]

    -[fix] Fix poor performance when selecting columns from a frame with a
      large number of columns (10k+). [#2873]

    -[fix] Numpy scalars can now be used in expressions. [#3027]

    -[enh] :ref:`f-expressions` now accepts a list/tuple of
      column names/column positions/column types in the ``j`` section. [#2797]

    -[api] Method :meth:`dt.FExpr.len` has been deprecated and replaced
      with a function :func:`dt.str.len()`. [#3016]

    -[api] Method :meth:`dt.FExpr.re_match` has been deprecated and replaced
      with a function :func:`dt.re.match()`. [#3017]

    fread
    -----

    -[fix] Fix an error when reading a file with uneven number of fields
      and having Windows-style newlines. [#2681]

    -[fix] Fread no longer throws an exception when the list of column types
      passed to parameter ``columns=`` contains ``str64``. [#2704]

    -[fix] Fread no longer improperly detects separators within quoted strings.
      [#922]

    Models
    ------

    -[new] Implemented a linear model with stochastic gradient descent learning.
      It supports binomial and multinomial regressions, as well as
      regression for continous targets. [#2871]

    -[enh] FTRL now supports :attr:`dt.Type.date32` and :attr:`dt.Type.time64`
      feature types. [#3007]


    General
    -------

    -[api] Datatable no longer supports Python 3.5, because Python 3.5 itself
      has reached its end of life on 2020-09-13 and will no longer be
      supported. If you are still using Python 3.5, please consider upgrading.
      [#2642]

    -[api] Removed function ``dt.open()``, which was deprecated since version
      0.10.0. [#3018]

    -[fix] Fixed a memory leak when creating a large number of datatable
      objects. [#2701]

    -[fix] Datatable can now be properly installed from a source distribution.
      [#2846]


    .. contributors::

        121 @st-pasha
        51  @samukweku
        31  @oleksiyskononenko
        7   @pradkrish
        1   @chi2liu
        1   @hannah-tillman    <Hannah Tillman>
        --
        62  @st-pasha
        14  @oleksiyskononenko
        4   @samukweku
        2   @arnocandel
        1   @tbraun84
        1   @BrannonKing       <Brannon King>
        1   @reach4bawer
        1   @ChristopherEeles  <Christopher Eeles>
        1   @kajuberdut        <Patrick Shechet>
        1   @zhangyingmath     <Ying Zhang>
        1   @chi2liu
        1   @coolyaolei
        1   @RaffaeleMorganti
        1   @Darel13712
        1   @hannah-tillman
        1   @myamullaciencia
        1   @wjensheng
