
.. changelog::

    Frame
    -----
    .. current-class:: datatable.Frame

    -[new] Property :attr:`.types` returns the list of :class:`dt.Type`
      objects for each column of the frame. These types are a generalization
      of previous stypes, and will eventually replace them.

    -[new] New column type :attr:`dt.Type.date32` added, which can store a
      calendar date [#1646]::

          >>> import datetime
          >>> DT = dt.Frame([datetime.date(2021, 2, 17)])

    -[new] A Frame can now be constructed from an Arrow
      table::

          >>> DT = dt.Frame(arrow_table)

      This process uses data Arrow C Data interface, and therefore does
      not entail data copying.

    -[new] A Frame can now be converted into an Arrow table, using the
      :meth:`.to_arrow()` method::

          >>> pa_table = DT.to_arrow()

    -[new] :attr:`.meta` property now provides access to frame's meta
      information, if any, as set by datatable functions/methods or
      by the user.

    -[enh] The row selector ``i`` in the delete operation ``del DT[i, :]``
      can now be an unsorted list. The list can also contain duplicate
      values.

    -[enh] When a Frame is shown in a python console, it will now display
      the stype of each column, as a second line under the column names.
      [#2810]

    -[fix] A Frame can now be created properly from a list of numpy bool
      objects. [#2762]

    -[api] Properties :attr:`.stypes` and :attr:`.ltypes` are now considered
      deprecated and will be removed in a future version. Currently they
      continue to work as before, however.


    FExpr
    -----
    .. current-module:: datatable

    -[new] Function :func:`ifelse()` can now accept more than 3 arguments,
      implementing a chained-if functionality. This is equivalent to
      ``CASE WHEN`` in SQL. [#2656]

    -[new] New function :func:`as_type()` that allows casting columns into
      a different stype. This function is an alternative to the already
      existing functionality of using the stype itself as a cast function.

    -[enh] Function :func:`sort()` can now accept argument ``na_positon``.
      It can take three values: ``"first"`` (default), ``"last"`` and
      ``"remove"``. The values describe the position assigned to NAs after
      sorting. [#793]

    -[enh] Function :func:`cut()` can now accept argument ``bins``, that
     is a list or a tuple of frames containing edges of the binning
     intervals. [#2819]

    -[fix] When a whole column is updated within a ``DT[i, j, by()]`` call,
      the stype/ltype of that column us now allowed to change. [#2685]

    -[fix] Fix a crash that occurred when using `median()` on virtual
      columns of type ArrayView64. [#2802]

    -[enh] :ref:`f-expressions` now accepts a list/tuple of
      column names/column positions/column types in the ``j`` section. [#2797]


    fread
    -----

    -[fix] Fix an error when reading a file with uneven number of fields
      and having Windows-style newlines. [#2681]

    -[fix] Fread no longer throws an exception when the list of column types
      passed to parameter ``columns=`` contains ``str64``. [#2704]


    General
    -------

    -[api] Datatable no longer supports Python 3.5, because Python 3.5 itself
      has reached its end of life on 2020-09-13 and will no longer be
      supported. If you are still using Python 3.5, please consider upgrading.
      [#2642]

    -[fix] Fixed a memory leak when creating a large number of datatable
      objects. [#2701]
