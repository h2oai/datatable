
.. xmethod:: datatable.Frame.__getitem__
    :src: src/core/frame/__getitem__.cc Frame::m__getitem__

    __getitem__(self, i, j[, by][, sort][, join])
    --

    The main method for accessing data and computing on the frame. Sometimes
    we also refer to it as the ``DT[i, j, ...]`` call.

    Since Python does not support keyword arguments inside square brackets,
    all arguments are positional. The first is the *row selector* `i`, the
    second is the *column selector* `j`, and the rest are optional. Thus,
    ``DT[i, j]`` selects rows ``i`` and columns ``j`` from frame ``DT``.

    If an additional `by` argument is present, then the selectors `i` and
    `j` work within groups generated by the ``by()`` expression. The `sort`
    argument reorders the rows of the frame, and the `join` argument allows
    performing SQL joins between several frames.

    The signature listed here is the most generic. But there are also
    special-case signatures ``DT[j]`` and ``DT[i, j]`` described below.


    Parameters
    ----------
    i : int | slice | Frame | FExpr | List[bool] | List[Any]
        The row selector.

        If this is an integer or a slice, then the behavior is the same as in
        Python when working on a list with :attr:`nrows` elements. In
        particular, the integer value must be within the range
        ``[-nrows; nrows)``. On the other hand when `i` is a slice, then either
        its start or end or both may be safely outside the row-range of the
        frame. The trivial slice ``:`` always selects all rows.

        `i` may also be a single-column boolean Frame. It must have the
        same number of rows as the current frame, and it serves as a mask for
        which rows are to be selected: ``True`` indicates that the row should
        be included in the result, while ``False`` and ``None`` skips the row.

        `i` may also be a single-column integer Frame. Such column specifies
        directly which row indices are to be selected. This is more flexible
        compared to a boolean column: the rows may be repeated, reordered,
        omitted, etc. All values in the column `i` must be in the range
        ``[0; nrows)`` or an error will be thrown. In particular, negative
        indices are not allowed. Also, if the column contains NA values, then
        it would produce an "invalid row", i.e. a row filled with NAs.

        `i` may also be an expression, which must evaluate into a single
        column, either boolean or integer. In this case the result is the
        same as described above for a single-column frame.

        When `i` is a list of booleans, then it is equivalent to a single-column
        boolean frame. In particular, the length of the list must be equal to
        :attr:`nrows`.

        Finally, `i` can be a list of any of the above (integers, slices, frames,
        expressions, etc), in which case each element of the list is evaluated
        separately and then all selected rows are put together. The list may
        contain ``None``s, which will be simply skipped.

    j : int | str | slice | list | type | FExpr | update
        This argument may either select columns, or perform computations with
        the columns.



    by : by

    sort : sort

    join : join

    return : Frame



.. xmethod:: datatable.Frame.__getitem__
    :src: src/core/frame/__getitem__.cc Frame::_get_single_column
    :noindex:

    __getitem__(self, j)
    --

    Extract a single column `j` from the frame.

    The single-argument version of ``DT[i, j]`` works only for ``j`` being
    either an integer (indicating column index) or a string (column name).
    If you need any other way of addressing column(s) of the frame, use the
    more versatile ``DT[:, j]`` form.

    Parameters
    ----------
    j : int | str
        The index or name of a column to retrieve.

    return: Frame
        Single-column frame containing the column at the specified index or
        with the given name.

    except: KeyError
        This exception is raised if the column with the given name does not
        exist in the frame.

    except: IndexError
        This exception is raised if the column does not exist at the provided
        index `j`.



.. xmethod:: datatable.Frame.__getitem__
    :src: src/core/frame/__getitem__.cc Frame::m__getitem__
    :noindex:

    __getitem__(self, i, j)
    --

    Extract a single value from the frame.

    Parameters
    ----------
    i : int
        The index of a row

    j : int | str
        The index or name of a column.

    return : None | bool | int | float | str | object
        A single value from the frame's row `i` and column `j`.
