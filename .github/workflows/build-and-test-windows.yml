name: Build and test wheels on Windows

on:
  push:
    branches:
      - main
      - /^rel\-*/
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: windows-latest

    env:
      DT_HARNESS: 'GitHub'
      DT_BUILD_ID: ${{ github.run_id }}
      DT_BUILD_NUMBER: ''
      DT_BUILD_SUFFIX: ''
      DT_RELEASE: ''

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Fetch remote branch
        run: |
          git fetch origin main

      - name: Prepare environment variables
        run: |
          $env:DT_BUILD_ID = (git rev-list --count main) - 1
          if ($env:GITHUB_EVENT_NAME -eq 'pull_request') {
            if ($env:GITHUB_PULL_REQUEST_HEAD_REPO_BRANCH -match '^rel-') {
              $env:DT_RELEASE = 'True'
            } else {
              $env:DT_BUILD_SUFFIX = "PR$($env:GITHUB_EVENT_NUMBER).$DT_BUILD_ID"
            }
          } elseif ($env:GITHUB_REF -eq 'refs/heads/main') {
            $env:DT_BUILD_NUMBER = $DT_BUILD_ID
          } elseif ($env:GITHUB_REF -match '^refs/heads/rel-') {
            $env:DT_RELEASE = 'True'
          } else {
            $env:DT_BUILD_SUFFIX = "$($env:GITHUB_REF).$DT_BUILD_ID"
          }

      - name: Print environment
        run: |
          echo "GITHUB_EVENT_NAME = $env:GITHUB_EVENT_NAME"
          echo "GITHUB_EVENT_NUMBER = $env:GITHUB_EVENT_NUMBER"
          echo "GITHUB_REF = $env:GITHUB_REF"
          echo "GITHUB_PULL_REQUEST_HEAD_REPO_BRANCH = $env:GITHUB_PULL_REQUEST_HEAD_REPO_BRANCH"
          echo "DT_HARNESS = $env:DT_HARNESS"
          echo "DT_BUILD_ID = $env:DT_BUILD_ID"
          echo "DT_RELEASE = $env:DT_RELEASE"
          echo "DT_BUILD_SUFFIX = $env:DT_BUILD_SUFFIX"
          echo "DT_BUILD_NUMBER = $env:DT_BUILD_NUMBER"

      - name: Set up Python 3.8
        uses: actions/setup-python@v3
        with:
          python-version: 3.8

      - name: Build datatable wheel
        run: |
          python -V
          python -m pip install --upgrade pip
          python ci/ext.py wheel
          echo "DT_WHEEL=$(ls dist/*-cp38-*.whl)" >> $GITHUB_ENV
          echo "DT_WHEEL = $DT_WHEEL"

      - name: Print build information
        run: |
          cat src/datatable/_build_info.py

      - name: Install and test
        run: |
          python -m pip install $DT_WHEEL
          python -m pip install pytest docutils pandas pyarrow
          python -m pytest -ra --maxfail=10 -Werror -vv --showlocals ./tests/

      - name: Uninstall wheel
        run: python -m pip uninstall -y $DT_WHEEL
